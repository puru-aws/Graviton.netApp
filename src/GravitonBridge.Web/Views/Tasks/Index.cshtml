@model IEnumerable<GravitonBridge.Core.Models.Task>
@{
    ViewData["Title"] = "Tasks";
}

<div class="text-center mb-5">
    <h1 class="display-3 text-gradient mb-3">Graviton Compatibility Tasks</h1>
    <p class="lead">Manage and monitor compatibility testing tasks</p>
</div>

<div class="row mb-4">
    <div class="col-md-6">
        <a asp-action="Create" class="btn btn-primary">
            ‚ûï Create New Task
        </a>
    </div>
    <div class="col-md-6 text-end">
        <div class="stats-grid" style="grid-template-columns: repeat(3, 1fr); gap: 1rem;">
            <div class="stat-card">
                <span class="stat-number">@Model.Count()</span>
                <div class="stat-label">Total Tasks</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">@Model.Count(t => t.Status == GravitonBridge.Core.Models.TaskStatus.Completed)</span>
                <div class="stat-label">Completed</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">@Model.Count(t => t.Status == GravitonBridge.Core.Models.TaskStatus.Running)</span>
                <div class="stat-label">Running</div>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5>All Tasks</h5>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Updated</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in Model)
                        {
                            <tr>
                                <td>
                                    <strong>@task.Name</strong>
                                </td>
                                <td>@task.Description</td>
                                <td>
                                    @switch (task.Status)
                                    {
                                        case GravitonBridge.Core.Models.TaskStatus.Pending:
                                            <span class="badge bg-warning">‚è≥ Pending</span>
                                            break;
                                        case GravitonBridge.Core.Models.TaskStatus.Running:
                                            <span class="badge bg-info">üîÑ Running</span>
                                            break;
                                        case GravitonBridge.Core.Models.TaskStatus.Completed:
                                            <span class="badge bg-success">‚úÖ Completed</span>
                                            break;
                                        case GravitonBridge.Core.Models.TaskStatus.Failed:
                                            <span class="badge bg-danger">‚ùå Failed</span>
                                            break;
                                    }
                                </td>
                                <td>@task.CreatedAt.ToString("MM/dd/yyyy HH:mm")</td>
                                <td>@(task.UpdatedAt?.ToString("MM/dd/yyyy HH:mm") ?? "Never")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@task.Id" class="btn btn-sm btn-info">üëÅÔ∏è View</a>
                                        
                                        @if (task.Status == GravitonBridge.Core.Models.TaskStatus.Pending)
                                        {
                                            <form asp-action="UpdateStatus" method="post" style="display: inline;">
                                                <input type="hidden" name="id" value="@task.Id" />
                                                <input type="hidden" name="status" value="@((int)GravitonBridge.Core.Models.TaskStatus.Running)" />
                                                <button type="submit" class="btn btn-sm btn-success">‚ñ∂Ô∏è Start</button>
                                            </form>
                                        }
                                        
                                        @if (task.Status == GravitonBridge.Core.Models.TaskStatus.Running)
                                        {
                                            <form asp-action="UpdateStatus" method="post" style="display: inline;">
                                                <input type="hidden" name="id" value="@task.Id" />
                                                <input type="hidden" name="status" value="@((int)GravitonBridge.Core.Models.TaskStatus.Completed)" />
                                                <button type="submit" class="btn btn-sm btn-primary">‚úÖ Complete</button>
                                            </form>
                                        }
                                        
                                        <form asp-action="Delete" method="post" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete this task?');">
                                            <input type="hidden" name="id" value="@task.Id" />
                                            <button type="submit" class="btn btn-sm btn-danger">üóëÔ∏è Delete</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <h4 class="text-muted">No tasks found</h4>
                <p class="text-muted">Create your first compatibility testing task to get started.</p>
                <a asp-action="Create" class="btn btn-primary">‚ûï Create New Task</a>
            </div>
        }
    </div>
</div>
